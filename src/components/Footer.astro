---
import LOGO from "../assets/SVG/LOGO_WHITE.svg";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import Carrousel from "./Carrousel.astro";
import DomeSeparator from "./index/DomeSeparator.astro";
import type { NavItem, NavTree } from "../schemas/navigation";
import type { Footer } from "../schemas/strapi.graphql.zod";
import { formatCopyright } from "../scripts/components/Copyright";
import { buildSocialItems } from "../scripts/components/socials";
import Button from "./Button.astro";

interface Props {
    /** √Årbol de navegaci√≥n completo (generalmente desde Strapi) */
    primaryLinks?: NavTree;
    /** T√≠tulo/nombre del grupo a extraer como navegaci√≥n secundaria */
    secondaryLinks?: string;
    footer: Footer;
    /** URL a donde apunta el logo */
    logoLinkHref?: string;
    /** Fuente del logo (astro:assets) */
    logoSrc?: ImageMetadata;
}

// Iconos se manejan en scripts/components/socials.ts

function getNavGroupItemsByTitle(tree?: NavTree, title?: string): NavItem[] {
    if (!tree || !title) return [];
    const queue = Array.isArray(tree) ? [...tree] : [tree as any];
    while (queue.length) {
        const node = queue.shift() as any;
        const nodeTitle = String(node.title ?? node.name ?? "");
        if (nodeTitle === title) {
            if (Array.isArray(node.items)) return node.items as NavItem[];
            if (Array.isArray(node.children)) return node.children as NavItem[];
            return [node as NavItem];
        }
        const children = node.items ?? node.children;
        if (Array.isArray(children)) queue.push(...children);
    }
    return [];
}

// Desestructuraci√≥n de props con alias internos m√°s claros
const { primaryLinks: navigationTree, secondaryLinks } = Astro.props as Props;

const secondaryNavItems: NavItem[] = getNavGroupItemsByTitle(navigationTree as NavTree, secondaryLinks);

const {
    primaryLinks: mainNavItems = [
        { title: "Servicios", path: "/services" },
        { title: "Blog", path: "/blog" },
        { title: "Acerca de", path: "/about" },
        { title: "Contacto", path: "/contact" },
    ],
    footer,
    logoLinkHref = "#",
    logoSrc = LOGO as unknown as ImageMetadata,
} = Astro.props as Props;

type PartnerImg = { src: string };
async function partners(): Promise<PartnerImg[] | undefined> {
    const files = footer.partnersGallery?.files;
    if (!Array.isArray(files) || files.length === 0) return undefined;
    return files
        .map((f) => (f && typeof f.url === "string" ? f.url : undefined))
        .filter((u): u is string => typeof u === "string" && u.length > 0)
        .map((u) => ({ src: u }));
}

const partnerImages = await partners();
---

<footer id="footer" role="contentinfo">
    <section class="relative" aria-labelledby="allies-title">
        <DomeSeparator>
            <h2 id="allies-title" class="font-display font-[900] tracking-tight text-2xl md:text-6xl text-primary">Nuestros Aliados</h2>
        </DomeSeparator>

        <!-- Carrusel -->
        {partnerImages && <Carrousel images={partnerImages} ariaLabel="Carrusel de logos de empresas colaboradoras" />}
    </section>

    <section class="relative pt-10">
        <DomeSeparator isAbsolute={false} className="bg-primary" showDecoration={false}>
            <div class="text-center">
                <h2 id="allies-title" class="font-display font-[900] tracking-tight text-2xl md:text-6xl text-white">¬øQuieres ser nuestro aliado?</h2>
                <p class="text-white">Juntos construyamos nuevas oportunidades</p>
            </div>
        </DomeSeparator>
        <div class="w-full bg-primary py-5">
            <div class="w-fit mx-auto">
                <Button defaultText="Quiero unirme üíú" hoverText="a cambiar vidas ‚ú®" href="/partners" />
            </div>
        </div>
    </section>
    <div class="relative w-full bg-primary text-white before:w-full before:h-1 before:bg-primary before:absolute before:-top-0.5">
        <section class="w-[90%] mx-auto relative pb-10 pt-10 grid grid-cols-1 md:grid-cols-12 gap-10 items-start" aria-labelledby="site-navigation-title">
            <h2 id="site-navigation-title" class="sr-only">Navegaci√≥n del sitio</h2>

            <nav class="md:col-span-4" aria-label="Navegaci√≥n principal">
                <ul class="text-2xl sm:text-3xl md:text-4xl space-y-3">
                    {
                        (navigationTree && Array.isArray(navigationTree) ? navigationTree : mainNavItems).map((item) => {
                            const href = item.path ?? (item as any).href;
                            const label = item.title ?? (item as any).name ?? "";
                            return (
                                <li>
                                    <a class="hover:text-secondary transition-all duration-200 ease-in-out after:bg-secondary after:w-0 after:absolute relative after:h-[2px] after:left-0 after:bottom-0 hover:after:w-full after:transition-all after:duration-200 after:ease-in-out" href={href}>
                                        {label}
                                    </a>
                                </li>
                            );
                        })
                    }
                </ul>
            </nav>

            <nav class="md:col-span-5" aria-label="Navegaci√≥n secundaria">
                {
                    secondaryNavItems.length > 0 && (
                        <ul class="text-base sm:text-lg md:text-xl space-y-3 md:max-w-[56ch]">
                            <li>
                                <h2 class="opacity-40 font-display font-bold">{secondaryLinks}</h2>
                            </li>
                            {secondaryNavItems.map((item) => (
                                <li>
                                    <a class="hover:text-secondary hover:after:opacity-100 after:absolute relative after:h-2 after:w-2 after:rounded-full after:bg-secondary after:-left-4 after:top-1/2 after:-translate-y-1/2 after:opacity-0" href={item.path}>
                                        {item.title}
                                    </a>
                                </li>
                            ))}
                        </ul>
                    )
                }
            </nav>

            <div class="md:col-span-3 text-center md:text-right md:justify-self-end">
                <div class="md:mt-12">
                    <a href={logoLinkHref} class="inline-block">
                        <Image src={logoSrc} alt="Logotipo" class="h-24 mx-auto md:ml-auto md:mr-0" />
                    </a>
                </div>

                <nav class="mt-8 w-full" aria-label="Redes sociales">
                    <ul class="flex items-center justify-center md:justify-end gap-3 w-full">
                        {
                            footer.Socials &&
                                (() => {
                                    const items = buildSocialItems(footer.Socials);
                                    return items.map(({ href, icon, label }) => (
                                        <li>
                                            <a href={href} aria-label={label} title={label} class="inline-flex items-center justify-center bg-secondary rounded-full p-3 text-white hover:bg-accent active:scale-[0.98] shadow-md hover:shadow-lg transition-all ease-in-out duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-accent focus-visible:ring-offset-2" target="_blank" rel="noopener noreferrer">
                                                <Icon name={icon} class="w-5 h-5 md:w-6 md:h-6" aria-hidden="true" />
                                            </a>
                                        </li>
                                    ));
                                })()
                        }
                    </ul>
                </nav>
            </div>
        </section>
    </div>

    <section class="bg-secondary py-5 md:px-10 flex flex-col md:flex-row items-center justify-center md:justify-between gap-3 text-sm md:text-base" aria-label="Informaci√≥n legal y cr√©ditos">
        <div class="w-full">
            <div class="flex flex-wrap justify-center md:justify-start gap-x-5 gap-y-1">
                <p>
                    {
                        footer.Copyright && (
                            <>
                                <span class="text-white opacity-80">
                                    {formatCopyright({
                                        legalName: footer.Copyright.legalname,
                                        yearStart: footer.Copyright.yearStart,
                                        autoYear: footer.Copyright.autoYear,
                                        yearOverride: footer.Copyright.yearOverride,
                                    })}
                                </span>
                                {footer.Copyright.extraText && <span> ¬∑ {footer.Copyright.extraText}</span>}
                            </>
                        )
                    }
                </p>
                {
                    footer.privacyLink && (
                        <a href={footer.privacyLink?.href} class="text-white opacity-80 hover:opacity-100 hover:text-primary">
                            {" "}
                            {footer.privacyLink?.text}
                        </a>
                    )
                }
                {
                    footer.termsLink && (
                        <a href={footer.termsLink?.href} class="text-white hover:text-primary opacity-80 hover:opacity-100">
                            {footer.termsLink?.text}
                        </a>
                    )
                }
            </div>
        </div>
        <div class="w-full text-center">
            <span class="text-white opacity-80">Desarrollado por</span>
            <a href="https://allmylinks.com/definitelynotisai" class="text-white opacity-80 hover:opacity-100 after:absolute relative after:h-[1px] hover:after:bg-primary after:w-full hover:after:w-0 hover:text-primary after:bg-white after:left-0 after:bottom-0 after:transition-all after:duration-200 after:ease-in-out" rel="noopener noreferrer" target="_blank">Isa√≠ Tobar</a>
        </div>
        <div class="w-full text-center md:text-right">
            <span class="text-white opacity-80">Hecho con</span>
            <a class="text-white hover:text-primary opacity-80 hover:opacity-100" href="https://astro.build" rel="noopener noreferrer" target="_blank"><Icon name="simple-icons:astro" class="inline-block" />{Astro.generator}</a>
        </div>
    </section>
</footer>
